// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication1.DbContexts;

#nullable disable

namespace WebApplication1.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230309031416_AddColumnUserTB")]
    partial class AddColumnUserTB
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebApplication1.Model.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("ProductId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            CategoryName = "Pet",
                            Description = "Dog",
                            ImageUrl = "",
                            Name = "Shiba Inu",
                            Price = 1.0
                        },
                        new
                        {
                            ProductId = 2,
                            CategoryName = "Pet",
                            Description = "Dog",
                            ImageUrl = "",
                            Name = "Dogger Coin",
                            Price = 12.0
                        },
                        new
                        {
                            ProductId = 3,
                            CategoryName = "Pet",
                            Description = "Dog",
                            ImageUrl = "",
                            Name = "Aslaska",
                            Price = 23.0
                        },
                        new
                        {
                            ProductId = 4,
                            CategoryName = "Pet",
                            Description = "Dog",
                            ImageUrl = "",
                            Name = "Bug France",
                            Price = 30.0
                        });
                });

            modelBuilder.Entity("WebApplication1.Model.Role", b =>
                {
                    b.Property<string>("Roleid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Roleid");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("WebApplication1.Model.User", b =>
                {
                    b.Property<string>("Userid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LinkActive")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Userid");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Userid = "fba3973c-05dc-40b6-8242-12e4d0a8c19e",
                            Email = "lmtuan@gmail.com",
                            IsActive = false,
                            Name = "Le Minh Tuan",
                            Password = "123",
                            Role = "admin"
                        },
                        new
                        {
                            Userid = "0e439f82-fc87-4294-8302-010a3e8b25cd",
                            Email = "nva@gmail.com",
                            IsActive = false,
                            Name = "Nguyen Van A",
                            Password = "123",
                            Role = "user"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
